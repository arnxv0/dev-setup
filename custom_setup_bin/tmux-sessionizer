#!/usr/bin/env bash
switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi

    # Start nvim in the primary window of the session
    tmux send-keys -t $1 "nvim ." C-m

    # Open a new tmux window (without running any commands in it)
    tmux new-window -t $1 -c $2

    # Focus back on the window where nvim was started (primary window)
    tmux select-window -t $1:1
}

if [[ $# -eq 1 ]]; then
    selected=$1
else

    # Simulating a dictionary using arrays
    keys=(
        "$HOME/Desktop"
        "$HOME/Downloads"
        "$HOME/Documents"
        "$HOME/Desktop/Flutter/Projects"
        "$HOME/Desktop/KatKode/projects"
        "$HOME"
    )
    values=(
        2
        2
        2
        1
        1
        1
    )

    all_dirs=()

    # Loop through the paths
    for i in "${!keys[@]}"; do
        path="${keys[$i]}"
        depth="${values[$i]}"

        # Ensure paths are properly expanded
        expanded_path=$(eval echo "$path")

        # Check if depth is a number
        if [[ "$depth" =~ ^[0-9]+$ ]]; then
            # Ensure the path is quoted to avoid issues with spaces or special characters
            dirs=$(find "$expanded_path" -mindepth 1 -maxdepth "$depth" -type d 2>/dev/null)
            all_dirs+=($dirs)
        else
            echo "Invalid depth: $depth for path: $expanded_path" >&2
        fi
done

# Remove duplicates and use fzf
selected=$(printf "%s\n" "${all_dirs[@]}" | sort -u | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $selected_name -c $selected
    hydrate $selected_name $selected
    exit 0
fi

if ! has_session $selected_name; then
    tmux new-session -ds $selected_name -c $selected
    hydrate $selected_name $selected
fi

switch_to $selected_name
